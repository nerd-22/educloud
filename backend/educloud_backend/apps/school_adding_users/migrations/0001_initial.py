# Generated by Django 5.2 on 2025-06-16 20:12

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('schools', '0005_alter_schooladmin_options_alter_schooladmin_managers_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('REGISTRAR', 'Registrar'), ('FINANCIAL', 'Financial Officer'), ('ACCOUNTANT', 'Accountant'), ('VICE_PRINCIPAL', 'Vice Principal'), ('PRINCIPAL', 'Principal'), ('TEACHER', 'Teacher'), ('PARENT', 'Parent'), ('SECURITY', 'Security')], max_length=20)),
                ('full_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('children', models.ManyToManyField(blank=True, related_name='parents', to='school_adding_users.schooluser')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='school_user_set', related_query_name='school_user', to='auth.group', verbose_name='groups')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='schools.school')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='school_user_set', related_query_name='school_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'School User',
                'verbose_name_plural': 'School Users',
                'unique_together': {('school', 'username')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
